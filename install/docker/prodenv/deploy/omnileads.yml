# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: You can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.

---
# OMniLeads installation playbook
# It uses the files group_vars/all and inventory, as environment variables
# It uses the file /var/tmp/ansible/ansible.cfg, as configuration file
# Things to take into account:
# https://docs.ansible.com/ansible/2.9/user_guide/playbooks_conditionals.html
# https://docs.ansible.com/ansible/2.9/user_guide/playbooks_loops.html
# https://docs.ansible.com/ansible/2.9/intro_configuration.html
# https://docs.ansible.com/ansible/2.5/user_guide/playbooks_reuse_roles.html

- name: OMniLeads installation
  hosts: prodenv-aio
  gather_facts: True
  roles:
    - prerequisitos

- import_playbook: modules/redis/deploy/redis.yml
  when: redis_host == "localhost"
- import_playbook: modules/postgresql/deploy/postgresql.yml
  when: postgres_host == "localhost"
- import_playbook: modules/rtpengine/deploy/rtpengine.yml
  when: rtpengine_host == "127.0.0.1"
- import_playbook: modules/kamailio/deploy/kamailio.yml
  when: kamailio_host == omni_fqdn
- import_playbook: modules/nginx/deploy/nginx.yml
- import_playbook: modules/websockets/deploy/websockets.yml
  when: websocket_host == "websockets"
- import_playbook: modules/asterisk/deploy/asterisk.yml
  when: asterisk_host == omni_ip

- name: OMniLeads application installation
  hosts: prodenv-aio
  tasks:

- name: Install PostgreSQL engine
    apt:
    pkg:
      - postgresql 
      - postgresql-contrib
    when: postgres_host == "localhost"

  # Create file .pgpass
  - name: Create file .pgpass
    template: src=roles/prerequisitos/templates/.pgpass dest={{ item }}.pgpass mode=0600 owner={{ usuario }} group={{ usuario }}
    with_items:
      - "{{ install_prefix }}"
      - /root/
    when: postgres_host == "localhost"

  # Create extension plperl, when the OMniLeads PostgreSQL package is not used
  - name: Create extension plperl
    shell: PGUSER={{ postgres_user }} PGDATABASE={{ postgres_database }} PGHOST={{ postgres_host }} PGPORT={{ postgres_port }} PGPASSWORD={{ postgres_password }} psql -c "CREATE EXTENSION plperl;"
    args:
      executable: /bin/bash

  # # Some Tweeks for Hight Load over 200 simultaneus users
  # - name: Add high load UWSGI params
  #   lineinfile:
  #     path: /opt/omnileads/run/oml_uwsgi.ini
  #     state: present
  #     line: "{{ item }}"
  #   with_items:
  #   - 'reload-on-rss = 1024'
  #   - 'reload-on-as = 2048'
  #   - 'evil-reload-on-rss = 3096'
  #   - 'max-requests = 2000'
  #   when: high_load == "true"

  # - name: Edit oml_uwsgi.ini High Load params
  #   lineinfile:
  #     path: /opt/omnileads/run/oml_uwsgi.ini
  #     regexp: "processes = 30"
  #     line: "processes = 50"
  #     state: present
  #     backup: yes
  #   when: high_load == "true"

  # - name: Edit oml_uwsgi.ini High Load params
  #   lineinfile:
  #     path: /opt/omnileads/run/oml_uwsgi.ini
  #     regexp: "harakiri = 600"
  #     line: "harakiri = 3600"
  #     state: present
  #     backup: yes
  #   when: high_load == "true"

  # - name: Edit oml_uwsgi.ini High Load params
  #   lineinfile:
  #     path: /opt/omnileads/run/oml_uwsgi.ini
  #     regexp: "socket-timeout = 600"
  #     line: "socket-timeout = 3600"
  #     state: present
  #     backup: yes
  #   when: high_load == "true"

  # - name: Edit oml_uwsgi.ini High Load params
  #   lineinfile:
  #     path: /opt/omnileads/run/oml_uwsgi.ini
  #     regexp: "max-worker-lifetime = 10800"
  #     line: "max-worker-lifetime = 7200"
  #     state: present
  #     backup: yes
  #   when: high_load == "true"

  # OMniLeads restart
  - name: Restart OMniLeads service
    systemd: name=omnileads state=restarted enabled=yes daemon_reload=yes
    tags: postinstall
